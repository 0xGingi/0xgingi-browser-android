Remove dependency on com.google.android.gcm (//third_party/android_sdk/public/extras/google/gcm/gcm-client/dist/gcm.jar).
author: Wengling Chen <feiyu2817@gmail.com>

---
 chrome/android/BUILD.gn                            |  1 -
 .../gcm/InvalidationGcmUpstreamSender.java         | 10 +--
 components/gcm_driver/android/BUILD.gn             |  1 -
 components/sync/android/BUILD.gn                   |  1 -
 third_party/android_sdk/BUILD.gn                   |  3 -
 third_party/cacheinvalidation/BUILD.gn             |  1 -
 .../external/client/android2/AndroidManifest.xml   | 35 ----------
 .../client/contrib/MultiplexingGcmListener.java    | 79 +---------------------
 .../channel/AndroidMessageReceiverService.java     | 17 -----
 .../channel/AndroidMessageSenderService.java       |  3 +-
 10 files changed, 5 insertions(+), 146 deletions(-)

diff --git a/chrome/android/BUILD.gn b/chrome/android/BUILD.gn
--- a/chrome/android/BUILD.gn
+++ b/chrome/android/BUILD.gn
@@ -368,7 +368,6 @@ android_library("chrome_java") {
     "//third_party/android_deps:com_google_protobuf_protobuf_lite_java",
     "//third_party/android_deps:javax_inject_javax_inject_java",
     "//third_party/android_media:android_media_java",
-    "//third_party/android_sdk:android_gcm_java",
     "//third_party/android_swipe_refresh:android_swipe_refresh_java",
     "//third_party/blink/public:blink_headers_java",
     "//third_party/blink/public/mojom:android_mojo_bindings_java",
diff --git a/chrome/android/java/src/org/chromium/chrome/browser/services/gcm/InvalidationGcmUpstreamSender.java b/chrome/android/java/src/org/chromium/chrome/browser/services/gcm/InvalidationGcmUpstreamSender.java
--- a/chrome/android/java/src/org/chromium/chrome/browser/services/gcm/InvalidationGcmUpstreamSender.java
+++ b/chrome/android/java/src/org/chromium/chrome/browser/services/gcm/InvalidationGcmUpstreamSender.java
@@ -13,7 +13,6 @@ import android.support.annotation.MainThread;
 import android.support.annotation.Nullable;
 import android.util.Log;
 
-import com.google.android.gms.gcm.GoogleCloudMessaging;
 import com.google.ipc.invalidation.ticl.android2.channel.GcmUpstreamSenderService;
 
 import org.chromium.base.ContextUtils;
@@ -94,13 +93,8 @@ public class InvalidationGcmUpstreamSender extends GcmUpstreamSenderService {
             return;
         }
         String msgId = UUID.randomUUID().toString();
-        try {
-            GoogleCloudMessaging.getInstance(ContextUtils.getApplicationContext())
-                    .send(to, msgId, 1, data);
-        } catch (IOException | IllegalArgumentException exception) {
-            Log.w(TAG, "Send message failed");
-            GcmUma.recordGcmUpstreamHistogram(context, GcmUma.UMA_UPSTREAM_SEND_FAILED);
-        }
+        Log.w(TAG, "Send message failed");
+        GcmUma.recordGcmUpstreamHistogram(context, GcmUma.UMA_UPSTREAM_SEND_FAILED);
     }
 
     private boolean isMessageWithinLimit(Bundle data) {
diff --git a/components/gcm_driver/android/BUILD.gn b/components/gcm_driver/android/BUILD.gn
--- a/components/gcm_driver/android/BUILD.gn
+++ b/components/gcm_driver/android/BUILD.gn
@@ -14,7 +14,6 @@ android_library("gcm_driver_java") {
   deps = [
     "//base:base_java",
     "//content/public/android:content_java",
-    "//third_party/android_sdk:android_gcm_java",
     "//third_party/jsr-305:jsr_305_javalib",
   ]
 
diff --git a/components/sync/android/BUILD.gn b/components/sync/android/BUILD.gn
--- a/components/sync/android/BUILD.gn
+++ b/components/sync/android/BUILD.gn
@@ -11,7 +11,6 @@ android_library("sync_java") {
     "//components/signin/core/browser/android:java",
     "//net/android:net_java",
     "//third_party/android_deps:com_android_support_support_annotations_java",
-    "//third_party/android_sdk:android_gcm_java",
     "//third_party/cacheinvalidation:cacheinvalidation_javalib",
     "//third_party/cacheinvalidation:cacheinvalidation_proto_java",
     "//third_party/jsr-305:jsr_305_javalib",
diff --git a/third_party/android_sdk/BUILD.gn b/third_party/android_sdk/BUILD.gn
--- a/third_party/android_sdk/BUILD.gn
+++ b/third_party/android_sdk/BUILD.gn
@@ -87,9 +87,6 @@ if (enable_java_templates) {
     testonly = true
     java_files = [ "//third_party/android_sdk/public/extras/chromium/support/src/org/chromium/android/support/PackageManagerWrapper.java" ]
   }
-  android_java_prebuilt("android_gcm_java") {
-    jar_path = "//third_party/android_sdk/public/extras/google/gcm/gcm-client/dist/gcm.jar"
-  }
 
   # The current version of //third_party/byte_buddy relies on an older
   # version of dx.
diff --git a/third_party/cacheinvalidation/BUILD.gn b/third_party/cacheinvalidation/BUILD.gn
--- a/third_party/cacheinvalidation/BUILD.gn
+++ b/third_party/cacheinvalidation/BUILD.gn
@@ -142,7 +142,6 @@ if (is_android) {
       "$google_play_services_package:google_play_services_tasks_java",
       "//base:base_java",
       "//third_party/android_protobuf:protobuf_nano_javalib",
-      "//third_party/android_sdk:android_gcm_java",
     ]
 
     java_files = [
diff --git a/third_party/cacheinvalidation/src/java/com/google/ipc/invalidation/external/client/android2/AndroidManifest.xml b/third_party/cacheinvalidation/src/java/com/google/ipc/invalidation/external/client/android2/AndroidManifest.xml
--- a/third_party/cacheinvalidation/src/java/com/google/ipc/invalidation/external/client/android2/AndroidManifest.xml
+++ b/third_party/cacheinvalidation/src/java/com/google/ipc/invalidation/external/client/android2/AndroidManifest.xml
@@ -4,10 +4,6 @@
 <manifest xmlns:android="http://schemas.android.com/apk/res/android"
     package="com.google.ipc.invalidation.client.android2">
 
-  <!-- App receives GCM messages. -->
-  <uses-permission android:name="com.google.android.c2dm.permission.RECEIVE" />
-  <!-- GCM connects to Google Services. -->
-  <uses-permission android:name="android.permission.INTERNET" />
   <!-- Keeps the processor from sleeping when a message is received. -->
   <uses-permission android:name="android.permission.WAKE_LOCK" />
 
@@ -16,40 +12,9 @@
     <service android:exported="false"
         android:name="com.google.ipc.invalidation.ticl.android2.TiclService"/>
 
-    <!-- Ticl sender. -->
-    <service android:exported="false"
-        android:name="com.google.ipc.invalidation.ticl.android2.channel.AndroidMessageSenderService"/>
-
     <!-- Receiver for scheduler alarms. -->
     <receiver android:exported="false"
         android:name="com.google.ipc.invalidation.ticl.android2.AndroidInternalScheduler$AlarmReceiver"/>
 
-    <!-- GCM Broadcast Receiver -->
-    <receiver android:exported="true"
-        android:name="com.google.ipc.invalidation.external.client.contrib.MultiplexingGcmListener$GCMReceiver"
-        android:permission="com.google.android.c2dm.permission.SEND">
-      <intent-filter>
-        <action android:name="com.google.android.c2dm.intent.RECEIVE" />
-        <action android:name="com.google.android.c2dm.intent.REGISTRATION" />
-        <category android:name="com.google.ipc.invalidation.ticl.android2" />
-      </intent-filter>
-    </receiver>
-
-    <!-- GCM multiplexer -->
-    <service android:exported="false"
-        android:name="com.google.ipc.invalidation.external.client.contrib.MultiplexingGcmListener">
-      <meta-data android:name="sender_ids" android:value="ipc.invalidation@9ma1l.qjz9zk"/>
-    </service>
-
-    <!-- Invalidation service multiplexed GCM receiver -->
-    <service android:exported="false"
-        android:name="com.google.ipc.invalidation.ticl.android2.channel.AndroidMessageReceiverService"
-        android:enabled="true"/>
-    <receiver android:exported="false"
-        android:name="com.google.ipc.invalidation.ticl.android2.channel.AndroidMessageReceiverService$Receiver">
-      <intent-filter>
-        <action android:name="com.google.ipc.invalidation.gcmmplex.EVENT" />
-      </intent-filter>
-    </receiver>
   </application>
 </manifest>
diff --git a/third_party/cacheinvalidation/src/java/com/google/ipc/invalidation/external/client/contrib/MultiplexingGcmListener.java b/third_party/cacheinvalidation/src/java/com/google/ipc/invalidation/external/client/contrib/MultiplexingGcmListener.java
--- a/third_party/cacheinvalidation/src/java/com/google/ipc/invalidation/external/client/contrib/MultiplexingGcmListener.java
+++ b/third_party/cacheinvalidation/src/java/com/google/ipc/invalidation/external/client/contrib/MultiplexingGcmListener.java
@@ -16,9 +16,6 @@
 
 package com.google.ipc.invalidation.external.client.contrib;
 
-import com.google.android.gcm.GCMBaseIntentService;
-import com.google.android.gcm.GCMBroadcastReceiver;
-import com.google.android.gcm.GCMRegistrar;
 import com.google.ipc.invalidation.external.client.SystemResources.Logger;
 import com.google.ipc.invalidation.external.client.android.service.AndroidLogger;
 import com.google.ipc.invalidation.ticl.android2.WakeLockManager;
@@ -69,7 +66,7 @@ import android.content.pm.ServiceInfo;
  * there is nothing to do except log an error (which this class does).
  *
  */
-public class MultiplexingGcmListener extends GCMBaseIntentService {
+public class MultiplexingGcmListener {
   /* This class is public so that it can be instantiated by the Android runtime. */
 
   /** Constants used in broadcast Intents. */
@@ -105,18 +102,6 @@ public class MultiplexingGcmListener extends GCMBaseIntentService {
     public static final String EXTRA_DATA_NUM_DELETED_MSGS = PREFIX + "NUM_DELETED_MSGS";
   }
 
-  /**
-   * {@link GCMBroadcastReceiver} that forwards GCM intents to the {@code MultiplexingGcmListener}
-   * class.
-   */
-  public static class GCMReceiver extends GCMBroadcastReceiver {
-    /* This class is public so that it can be instantiated by the Android runtime. */
-    @Override
-    protected String getGCMIntentServiceClassName(Context context) {
-      return MultiplexingGcmListener.class.getName();
-    }
-  }
-
   /**
    * Convenience base class for client implementations. It provides base classes for a broadcast
    * receiver and an intent service that work together to handle events from the
@@ -262,59 +247,6 @@ public class MultiplexingGcmListener extends GCMBaseIntentService {
 
   // All onYYY methods work by constructing an appropriate Intent and broadcasting it.
 
-  @Override
-  protected void onMessage(Context context, Intent intent) {
-    Intent newIntent = new Intent();
-    newIntent.putExtra(Intents.EXTRA_OP_MESSAGE, true);
-    newIntent.putExtras(intent);
-    rebroadcast(newIntent);
-  }
-
-  @Override
-  protected void onRegistered(Context context, String registrationId) {
-    Intent intent = new Intent();
-    intent.putExtra(Intents.EXTRA_OP_REGISTERED, true);
-    intent.putExtra(Intents.EXTRA_DATA_REG_ID, registrationId);
-    rebroadcast(intent);
-  }
-
-  @Override
-  protected void onUnregistered(Context context, String registrationId) {
-    Intent intent = new Intent();
-    intent.putExtra(Intents.EXTRA_OP_UNREGISTERED, true);
-    intent.putExtra(Intents.EXTRA_DATA_REG_ID, registrationId);
-    rebroadcast(intent);
-  }
-
-  @Override
-  protected void onDeletedMessages(Context context, int total) {
-    Intent intent = new Intent();
-    intent.putExtra(Intents.EXTRA_OP_DELETED_MESSAGES, true);
-    intent.putExtra(Intents.EXTRA_DATA_NUM_DELETED_MSGS, total);
-    rebroadcast(intent);
-  }
-
-  @Override
-  protected void onError(Context context, String errorId) {
-    // This is called for unrecoverable errors, so just log a warning.
-    logger.warning("GCM error: %s", errorId);
-  }
-
-  @Override
-  protected String[] getSenderIds(Context context) {
-    return readSenderIdsFromManifestOrDie(this);
-  }
-
-  /**
-   * Broadcasts {@code intent} with the action set to {@link Intents#ACTION} and the package name
-   * set to the package name of this service.
-   */
-  private void rebroadcast(Intent intent) {
-    intent.setAction(Intents.ACTION);
-    intent.setPackage(getPackageName());
-    sendBroadcast(intent);
-  }
-
   /**
    * Registers with GCM if not already registered. Also verifies that the device supports GCM
    * and that the manifest is correctly configured. Returns the existing registration id, if one
@@ -324,14 +256,7 @@ public class MultiplexingGcmListener extends GCMBaseIntentService {
    * @throws IllegalStateException if the manifest is not correctly configured
    */
   public static String initializeGcm(Context context) {
-      AndroidChannelPreferences.setGcmChannelType(GcmChannelType.DEFAULT);
-      GCMRegistrar.checkDevice(context);
-      GCMRegistrar.checkManifest(context);
-      final String regId = GCMRegistrar.getRegistrationId(context);
-      if (regId.isEmpty()) {
-          GCMRegistrar.register(context, readSenderIdsFromManifestOrDie(context));
-      }
-    return regId;
+    return "";
   }
 
   /**
diff --git a/third_party/cacheinvalidation/src/java/com/google/ipc/invalidation/ticl/android2/channel/AndroidMessageReceiverService.java b/third_party/cacheinvalidation/src/java/com/google/ipc/invalidation/ticl/android2/channel/AndroidMessageReceiverService.java
--- a/third_party/cacheinvalidation/src/java/com/google/ipc/invalidation/ticl/android2/channel/AndroidMessageReceiverService.java
+++ b/third_party/cacheinvalidation/src/java/com/google/ipc/invalidation/ticl/android2/channel/AndroidMessageReceiverService.java
@@ -15,7 +15,6 @@
  */
 package com.google.ipc.invalidation.ticl.android2.channel;
 
-import com.google.android.gcm.GCMRegistrar;
 import com.google.ipc.invalidation.external.client.SystemResources.Logger;
 import com.google.ipc.invalidation.external.client.android.service.AndroidLogger;
 import com.google.ipc.invalidation.external.client.contrib.MultiplexingGcmListener;
@@ -126,20 +125,4 @@ public class AndroidMessageReceiverService extends MultiplexingGcmListener.Abstr
     // now, there is nothing to do.
   }
 
-  /**
-   * Initializes GCM as a convenience method for tests. In production, applications should handle
-   * this.
-   */
-  public static void initializeGcmForTest(Context context, Logger logger, String senderId) {
-    // Initialize GCM.
-    GCMRegistrar.checkDevice(context);
-    GCMRegistrar.checkManifest(context);
-    String regId = GCMRegistrar.getRegistrationId(context);
-    if (regId.isEmpty()) {
-      logger.info("Not registered with GCM; registering");
-      GCMRegistrar.register(context, senderId);
-    } else {
-      logger.fine("Already registered with GCM: %s", regId);
-    }
-  }
 }
diff --git a/third_party/cacheinvalidation/src/java/com/google/ipc/invalidation/ticl/android2/channel/AndroidMessageSenderService.java b/third_party/cacheinvalidation/src/java/com/google/ipc/invalidation/ticl/android2/channel/AndroidMessageSenderService.java
--- a/third_party/cacheinvalidation/src/java/com/google/ipc/invalidation/ticl/android2/channel/AndroidMessageSenderService.java
+++ b/third_party/cacheinvalidation/src/java/com/google/ipc/invalidation/ticl/android2/channel/AndroidMessageSenderService.java
@@ -15,7 +15,6 @@
  */
 package com.google.ipc.invalidation.ticl.android2.channel;
 
-import com.google.android.gcm.GCMRegistrar;
 import com.google.ipc.invalidation.common.GcmSharedConstants;
 import com.google.ipc.invalidation.external.client.SystemResources.Logger;
 import com.google.ipc.invalidation.external.client.android.service.AndroidLogger;
@@ -395,7 +394,7 @@ public class AndroidMessageSenderService extends IntentService {
         // No client key when using old style registration id.
         clientKey = "";
         try {
-            registrationId = GCMRegistrar.getRegistrationId(context);
+        registrationId = null;
         } catch (RuntimeException exception) {
             // GCMRegistrar#getRegistrationId occasionally throws a runtime exception. Catching the
             // exception rather than crashing.
