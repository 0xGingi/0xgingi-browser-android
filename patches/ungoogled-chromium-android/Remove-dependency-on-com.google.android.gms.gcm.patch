From: Wengling Chen <feiyu2817@gmail.com>
Date: Sat, 2 Nov 2019 07:56:44 +0100
Subject: Remove dependency on com.google.android.gms.gcm

It also disalbes Snippets, auto-update of offline pages and launching browser from background service.
The snippets are already disabled in native codes, this will disable it on Java level.
---
 chrome/android/BUILD.gn                                                                                   |    3 
 chrome/android/java/src/com/google/ipc/invalidation/ticl/android2/channel/GcmRegistrationTaskService.java |   10 -
 chrome/android/java/src/org/chromium/chrome/browser/ChromeBackgroundService.java                          |   60 ----------
 chrome/android/java/src/org/chromium/chrome/browser/ntp/snippets/SnippetsLauncher.java                    |    2 
 chrome/android/java/src/org/chromium/chrome/browser/services/gcm/ChromeGcmListenerService.java            |   52 --------
 components/background_task_scheduler/BUILD.gn                                                             |    1 
 components/background_task_scheduler/internal/BUILD.gn                                                    |    2 
 third_party/android_deps/BUILD.gn                                                                         |   18 ---
 8 files changed, 4 insertions(+), 144 deletions(-)

--- a/chrome/android/BUILD.gn
+++ b/chrome/android/BUILD.gn
@@ -271,7 +271,6 @@ android_library("chrome_java") {
     "$google_play_services_package:google_play_services_cast_framework_java",
     "$google_play_services_package:google_play_services_cast_java",
     "$google_play_services_package:google_play_services_fido_java",
-    "$google_play_services_package:google_play_services_gcm_java",
     "$google_play_services_package:google_play_services_iid_java",
     "$google_play_services_package:google_play_services_tasks_java",
     "$google_play_services_package:google_play_services_vision_common_java",
@@ -947,7 +946,6 @@ android_library("chrome_test_java") {
     "$google_play_services_package:google_play_services_cast_framework_java",
     "$google_play_services_package:google_play_services_cast_java",
     "$google_play_services_package:google_play_services_fido_java",
-    "$google_play_services_package:google_play_services_gcm_java",
     "$google_play_services_package:google_play_services_iid_java",
     "$google_play_services_package:google_play_services_tasks_java",
     "//base:base_java",
@@ -1875,7 +1873,6 @@ android_library("browser_java_test_suppo
   ]
   deps = [
     ":chrome_java",
-    "$google_play_services_package:google_play_services_gcm_java",
     "//base:base_java",
     "//base:base_java_test_support",
     "//chrome/browser/profiles/android:java",
--- a/chrome/android/java/src/org/chromium/chrome/browser/ChromeBackgroundService.java
+++ b/chrome/android/java/src/org/chromium/chrome/browser/ChromeBackgroundService.java
@@ -8,10 +8,6 @@ import android.content.Context;
 
 import androidx.annotation.VisibleForTesting;
 
-import com.google.android.gms.gcm.GcmNetworkManager;
-import com.google.android.gms.gcm.GcmTaskService;
-import com.google.android.gms.gcm.TaskParams;
-
 import org.chromium.base.Log;
 import org.chromium.base.task.PostTask;
 import org.chromium.chrome.browser.background_sync.BackgroundSyncBackgroundTaskScheduler;
@@ -28,48 +24,9 @@ import org.chromium.content_public.brows
  * browser needs to be launched for scheduled tasks, or in response to changing network or power
  * conditions.
  */
-public class ChromeBackgroundService extends GcmTaskService {
+public class ChromeBackgroundService {
     private static final String TAG = "BackgroundService";
 
-    @Override
-    @VisibleForTesting
-    public int onRunTask(final TaskParams params) {
-        final String taskTag = params.getTag();
-        final Context context = this;
-        PostTask.runOrPostTask(UiThreadTaskTraits.DEFAULT, () -> {
-            switch (taskTag) {
-                case BackgroundSyncBackgroundTaskScheduler.TASK_TAG:
-                    // Background Sync tasks are now scheduled using BackgroundTaskScheduler.
-                    // This should be rare, and we simply reschedule using BackgroundTaskScheduler.
-                    rescheduleOneShotBackgroundSyncTasks();
-                    break;
-
-                case OfflinePageUtils.TASK_TAG:
-                    // Offline pages are migrating to BackgroundTaskScheduler, therefore getting
-                    // a task through ChromeBackgroundService should cause a rescheduling using
-                    // the new component.
-                    rescheduleOfflinePages();
-                    break;
-
-                case SnippetsLauncher.TASK_TAG_WIFI:
-                case SnippetsLauncher.TASK_TAG_FALLBACK:
-                    handleSnippetsOnPersistentSchedulerWakeUp(context, taskTag);
-                    break;
-
-                // This is only for tests.
-                case ServiceManagerStartupUtils.TASK_TAG:
-                    handleServicificationStartupTask(context, taskTag);
-                    break;
-
-                default:
-                    Log.i(TAG, "Unknown task tag " + taskTag);
-                    break;
-            }
-        });
-
-        return GcmNetworkManager.RESULT_SUCCESS;
-    }
-
     private void handleSnippetsOnPersistentSchedulerWakeUp(Context context, String tag) {
         if (!SnippetsLauncher.hasInstance()) launchBrowser(context, tag);
         snippetsOnPersistentSchedulerWakeUp();
@@ -100,15 +57,6 @@ public class ChromeBackgroundService ext
         rescheduleOneShotBackgroundSyncTasks();
     }
 
-    private void handleSnippetsOnBrowserUpgraded() {
-        if (SnippetsLauncher.shouldNotifyOnBrowserUpgraded()) {
-            if (!SnippetsLauncher.hasInstance()) {
-                launchBrowser(this, /*tag=*/""); // The |tag| doesn't matter here.
-            }
-            snippetsOnBrowserUpgraded();
-        }
-    }
-
     /** Reschedules offline pages (using appropriate version of Background Task Scheduler). */
     private void rescheduleOfflinePages() {
         BackgroundScheduler.getInstance().reschedule();
@@ -119,10 +67,4 @@ public class ChromeBackgroundService ext
                 BackgroundSyncBackgroundTaskScheduler.BackgroundSyncTask
                         .ONE_SHOT_SYNC_CHROME_WAKE_UP);
     }
-
-    @Override
-    public void onInitializeTasks() {
-        rescheduleBackgroundSyncTasksOnUpgrade();
-        handleSnippetsOnBrowserUpgraded();
-    }
 }
--- a/chrome/android/java/src/org/chromium/chrome/browser/ntp/snippets/SnippetsLauncher.java
+++ b/chrome/android/java/src/org/chromium/chrome/browser/ntp/snippets/SnippetsLauncher.java
@@ -35,7 +35,7 @@ public class SnippetsLauncher {
     // If it is non-null then the browser is running.
     private static SnippetsLauncher sInstance;
 
-    private boolean mGCMEnabled = true;
+    private boolean mGCMEnabled;
 
     /**
      * Create a SnippetsLauncher object, which is owned by C++.
--- a/chrome/android/java/src/org/chromium/chrome/browser/services/gcm/ChromeGcmListenerService.java
+++ b/chrome/android/java/src/org/chromium/chrome/browser/services/gcm/ChromeGcmListenerService.java
@@ -10,8 +10,6 @@ import android.os.Build;
 import android.os.Bundle;
 import android.text.TextUtils;
 
-import com.google.android.gms.gcm.GcmListenerService;
-
 import org.chromium.base.ContextUtils;
 import org.chromium.base.Log;
 import org.chromium.base.ThreadUtils;
@@ -32,56 +30,9 @@ import org.chromium.content_public.brows
 /**
  * Receives Downstream messages and status of upstream messages from GCM.
  */
-public class ChromeGcmListenerService extends GcmListenerService {
+public class ChromeGcmListenerService {
     private static final String TAG = "ChromeGcmListener";
 
-    @Override
-    public void onCreate() {
-        ProcessInitializationHandler.getInstance().initializePreNative();
-        super.onCreate();
-    }
-
-    @Override
-    public void onMessageReceived(final String from, final Bundle data) {
-        boolean hasCollapseKey = !TextUtils.isEmpty(data.getString("collapse_key"));
-        GcmUma.recordDataMessageReceived(ContextUtils.getApplicationContext(), hasCollapseKey);
-
-        // Dispatch the message to the GCM Driver for native features.
-        PostTask.runOrPostTask(UiThreadTaskTraits.DEFAULT, () -> {
-            GCMMessage message = null;
-            try {
-                message = new GCMMessage(from, data);
-            } catch (IllegalArgumentException e) {
-                Log.e(TAG, "Received an invalid GCM Message", e);
-                return;
-            }
-
-            scheduleOrDispatchMessageToDriver(message);
-        });
-    }
-
-    @Override
-    public void onMessageSent(String msgId) {
-        Log.d(TAG, "Message sent successfully. Message id: " + msgId);
-        GcmUma.recordGcmUpstreamHistogram(
-                ContextUtils.getApplicationContext(), GcmUma.UMA_UPSTREAM_SUCCESS);
-    }
-
-    @Override
-    public void onSendError(String msgId, String error) {
-        Log.w(TAG, "Error in sending message. Message id: " + msgId + " Error: " + error);
-        GcmUma.recordGcmUpstreamHistogram(
-                ContextUtils.getApplicationContext(), GcmUma.UMA_UPSTREAM_SEND_FAILED);
-    }
-
-    @Override
-    public void onDeletedMessages() {
-        // TODO(johnme): Ask GCM to include the subtype in this event.
-        Log.w(TAG, "Push messages were deleted, but we can't tell the Service Worker as we don't"
-                + "know what subtype (app ID) it occurred for.");
-        GcmUma.recordDeletedMessages(ContextUtils.getApplicationContext());
-    }
-
     /**
      * Returns if we deliver the GCMMessage with a background service by calling
      * Context#startService. This will only work if Android has put us in a whitelist to allow
@@ -211,7 +162,6 @@ public class ChromeGcmListenerService ex
     static void dispatchMessageToDriver(GCMMessage message) {
         ThreadUtils.assertOnUiThread();
         ChromeBrowserInitializer.getInstance().handleSynchronousStartup();
-        GCMDriver.dispatchMessage(message);
     }
 
     private static boolean isFullBrowserLoaded() {
--- a/components/background_task_scheduler/BUILD.gn
+++ b/components/background_task_scheduler/BUILD.gn
@@ -124,7 +124,6 @@ if (is_android) {
       "$google_play_services_package:google_play_services_auth_base_java",
       "$google_play_services_package:google_play_services_base_java",
       "$google_play_services_package:google_play_services_basement_java",
-      "$google_play_services_package:google_play_services_gcm_java",
       "$google_play_services_package:google_play_services_tasks_java",
       "internal:internal_java",
       "internal:proto_java",
--- a/third_party/android_deps/BUILD.gn
+++ b/third_party/android_deps/BUILD.gn
@@ -1270,24 +1270,6 @@ android_aar_prebuilt("google_play_servic
 }
 
 # This is generated, do not edit. Update BuildConfigGenerator.groovy instead.
-android_aar_prebuilt("google_play_services_gcm_java") {
-  aar_path = "libs/com_google_android_gms_play_services_gcm/play-services-gcm-17.0.0.aar"
-  info_path = "libs/com_google_android_gms_play_services_gcm/com_google_android_gms_play_services_gcm.info"
-  deps = [
-    ":androidx_collection_collection_java",
-    ":androidx_core_core_java",
-    ":androidx_legacy_legacy_support_core_utils_java",
-    ":google_play_services_base_java",
-    ":google_play_services_basement_java",
-    ":google_play_services_iid_java",
-    ":google_play_services_stats_java",
-  ]
-
-  # Removing drawables from GMS .aars as they are unused bloat.
-  strip_drawables = true
-}
-
-# This is generated, do not edit. Update BuildConfigGenerator.groovy instead.
 android_aar_prebuilt("google_play_services_iid_java") {
   aar_path = "libs/com_google_android_gms_play_services_iid/play-services-iid-17.0.0.aar"
   info_path = "libs/com_google_android_gms_play_services_iid/com_google_android_gms_play_services_iid.info"
--- a/components/background_task_scheduler/internal/BUILD.gn
+++ b/components/background_task_scheduler/internal/BUILD.gn
@@ -29,7 +29,6 @@ if (is_android) {
       ":proto_java",
       "$google_play_services_package:google_play_services_base_java",
       "$google_play_services_package:google_play_services_basement_java",
-      "$google_play_services_package:google_play_services_gcm_java",
       "$google_play_services_package:google_play_services_tasks_java",
       "//base:base_java",
       "//components/background_task_scheduler:background_task_scheduler_task_ids_java",
@@ -100,7 +99,6 @@ if (is_android) {
       ":internal_java",
       "$google_play_services_package:google_play_services_base_java",
       "$google_play_services_package:google_play_services_basement_java",
-      "$google_play_services_package:google_play_services_gcm_java",
       "$google_play_services_package:google_play_services_tasks_java",
       "//base:base_java",
       "//base:base_java_test_support",
--- a/chrome/android/java/src/com/google/ipc/invalidation/ticl/android2/channel/GcmRegistrationTaskService.java
+++ b/chrome/android/java/src/com/google/ipc/invalidation/ticl/android2/channel/GcmRegistrationTaskService.java
@@ -4,18 +4,10 @@
 
 package com.google.ipc.invalidation.ticl.android2.channel;
 
-import com.google.android.gms.gcm.GcmNetworkManager;
-import com.google.android.gms.gcm.GcmTaskService;
-import com.google.android.gms.gcm.TaskParams;
-
 /**
  * A class with this name was part of the cacheinvalidation library, which isn't used anymore and
  * has been deleted. However, this service is exported in the AndroidManifest.xml and thus is part
  * of Chrome's public API, so we need to keep this dummy class around.
  */
-public class GcmRegistrationTaskService extends GcmTaskService {
-    @Override
-    public int onRunTask(TaskParams params) {
-        return GcmNetworkManager.RESULT_FAILURE;
-    }
+public class GcmRegistrationTaskService {
 }
